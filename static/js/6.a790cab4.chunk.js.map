{"version":3,"sources":["containers/CharacterContainer/index.js","redux/characters/thunks.js"],"names":["mapDispatchToProps","getCharacters","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","getState","response","error","wrap","_context","prev","next","getCharactersRequest","axios","get","sent","console","log","getCharactersSuccess","data","results","t0","Error","getCharactersFail","toString","stop","_x","_x2","apply","this","arguments","addFavoriteCharacter","connect","state","_state$characters","characters","loading","entities","_state$users","users","user","loggedIn","props","loanding","useEffect","length","charactersNotFavorites","filter","item","favoriteCharacters","includes","id","charactersFavorites","react_default","createElement","className","Container_default","Row_default","map","character","index","Col_default","md","key","Card_default","bg","text","style","marginBottom","marginTop","Img","variant","src","image","Body","Title","name","Text","status","Subtitle","Button_default","onClick"],"mappings":"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","file":"static/js/6.a790cab4.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { getCharacters } from '../../redux/characters/thunks'\r\nimport { addFavoriteCharacter } from '../../redux/users'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst CharacterContainer = props => {\r\n  const {\r\n    getCharacters,\r\n    addFavoriteCharacter,\r\n    loanding,\r\n    characters,\r\n    error,\r\n    user\r\n  } = props\r\n\r\n  useEffect(() => {\r\n    (characters.length === 0 && getCharacters())\r\n  }, [])\r\n\r\n  const charactersNotFavorites = characters.filter(item => {\r\n    return !user.favoriteCharacters.includes(item.id);\r\n  })\r\n\r\n  const charactersFavorites = characters.filter(item => {\r\n    return user.favoriteCharacters.includes(item.id);\r\n  })\r\n\r\n  console.log(characters)\r\n  return(\r\n    <div className=\"Characters\">\r\n      <Container>\r\n        {error}\r\n        {loanding && (\r\n          <div>Loanding</div>\r\n        )}\r\n        {!loanding && (\r\n          <Row>\r\n            {!loanding && charactersFavorites.map((character, index) =>(\r\n              <Col md={4} key={index}>\r\n                <Card bg=\"primary\" text=\"white\" style={{ marginBottom:'20px', marginTop:'20px'}}>\r\n                  <Card.Img variant=\"top\" src={character.image} />\r\n                  <Card.Body>\r\n                    <Card.Title>{character.name}</Card.Title>\r\n                    <Card.Text>{character.status}</Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            ))}\r\n\r\n            {!loanding && charactersNotFavorites.map((character, index) =>(\r\n              <Col md={4} key={index}>\r\n                <Card style={{ marginBottom:'20px', marginTop:'20px'}}>\r\n                  <Card.Img variant=\"top\" src={character.image} />\r\n                  <Card.Body>\r\n                    <Card.Title>{character.name}</Card.Title>\r\n                    <Card.Subtitle className=\"mb-2 text-muted\">{character.status}</Card.Subtitle>\r\n                    <Button onClick={ () => addFavoriteCharacter(character.id)} variant=\"primary\">AÃ±adir a Favoritos</Button>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\nconst mapStateToProps = state => {\r\n  const {\r\n    loading,\r\n    entities,\r\n    error\r\n  } = state.characters\r\n\r\n  const {\r\n    users,\r\n    loggedIn\r\n  } = state.users\r\n\r\n  return {\r\n    loading,\r\n    characters: entities,\r\n    error,\r\n    user: users[loggedIn]\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getCharacters,\r\n  addFavoriteCharacter\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CharacterContainer);\r\n\r\n","import axios from \"axios\";\r\nimport {\r\n  getCharactersRequest,\r\n  getCharactersSuccess,\r\n  getCharactersFail\r\n} from './index'\r\n\r\nconst baseApiUrl = 'https://rickandmortyapi.com/api/character/'\r\n\r\nexport const getCharacters = () => {\r\n  return async (dispatch, getState) => {\r\n    dispatch(getCharactersRequest())\r\n    try {\r\n      const response = await axios.get(baseApiUrl)\r\n      console.log(response)\r\n      dispatch(\r\n        getCharactersSuccess(response.data.results)\r\n      )\r\n    } catch (e) {\r\n      const error = new Error(e)\r\n      dispatch(getCharactersFail(error.toString()))\r\n    }   \r\n  }\r\n}"],"sourceRoot":""}