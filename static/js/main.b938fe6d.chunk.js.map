{"version":3,"sources":["redux/users/index.js","redux/episodes/index.js","redux/characters/index.js","containers/PrivateRoute/index.js","containers/NotLoggedInRoute/index.js","redux/users/thunks.js","components/Navbar/index.js","pages/HomePage/index.js","pages/CharactersPage/index.js","containers/LoginContainer/index.js","pages/LoginPage/index.js","containers/RegisterContainer/index.js","pages/RegisterPage/index.js","pages/EpisodeCommonPage/index.js","routes.js","serviceWorker.js","redux/reducers.js","redux/middlewares/logger.js","redux/store.js","index.js"],"names":["loginRequest","type","loginSuccess","userId","payload","loginError","error","loginOff","addUserRequest","addUserSuccess","_ref","name","password","email","id","addUserError","addFavoriteEpisode","idEpisode","addFavoriteCharacter","idCharacter","initialState","users","1","favoriteCharacters","favoriteEpisodes","2","3","userList","loggedIn","localStorage","getItem","loading","__webpack_exports__","state","arguments","length","undefined","action","Object","C_Users_Luis_Jim_nez_Desktop_Luis_Jim_nez_React_js_desafios_react_proyect_2_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","_action$payload","C_Users_Luis_Jim_nez_Desktop_Luis_Jim_nez_React_js_desafios_react_proyect_2_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","concat","C_Users_Luis_Jim_nez_Desktop_Luis_Jim_nez_React_js_desafios_react_proyect_2_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","newFavorite","getEpisodesRequest","getEpisodesSuccess","episodes","getEpisodesFail","entities","C_Users_Luis_Jim_nez_Desktop_Luis_Jim_nez_React_js_desafios_react_proyect_2_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","loanding","getCharactersRequest","getCharactersSuccess","characters","getCharactersFail","mdp","setUserId","loginSuccessCreator","conecta","props","Component","component","rest","objectWithoutProperties","useEffect","react_default","a","createElement","react_router","assign","render","to","connect","uuidv1","require","mapDispatchToProps","closeSesion","dispatch","getState","clear","_state$users","console","log","className","data-toggle","data-target","aria-controls","aria-expanded","aria-label","react_router_dom","exact","onClick","EpisodeContainer","lazy","Promise","all","__webpack_require__","e","then","bind","HomePage","Fragment","components_Navbar","react","fallback","Container_default","CharacterContainer","CharacterPage","login","find","fakeLogin","setItem","_useState","useState","show","_useState2","slicedToArray","values","setValues","handleChange","event","_event$target","target","value","objectSpread","defineProperty","Row_default","Col_default","md","Alert_default","variant","Form_default","onSubmit","preventDefault","Group","Label","Control","onChange","Button_default","LoginPage","containers_LoginContainer","addUser","_ref2","response","_state$users2","toReturn","some","uid","newId","fakeAddUser","_e$target","as","Row","column","sm","RegisterPage","containers_RegisterContainer","EpisodeCommonContainer","EpisodeCommonPage","Routes","containers_NotLoggedInRoute","path","containers_PrivateRoute","Boolean","window","location","hostname","match","combineReducers","episodesReducer","charactersReducer","userReducer","logger","store","next","group","info","result","groupEnd","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","es","routes","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b938fe6d.chunk.js","sourcesContent":["const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nconst LOGIN_REQUEST = 'LOGIN_REQUEST'\nconst LOGIN_ERROR = 'LOGIN_ERROR'\n\nconst LOGIN_OFF = 'LOGIN_OFF'\n\nconst ADD_USER_REQUEST = 'ADD_USER_REQUEST'\nconst ADD_USER_SUCCESS = 'ADD_USER_SUCCESS'\nconst ADD_USER_ERROR = 'ADD_USER_ERROR'\n\nconst ADD_FAVORITE_EPISODE = 'ADD_FAVORITE_EPISODE'\nconst ADD_FAVORITE_CHARACTER = 'ADD_FAVORITE_CHARACTERS'\n\nexport const loginRequest = () => ({\n  type: LOGIN_REQUEST\n})\n\nexport const loginSuccess = userId => ({\n  type: LOGIN_SUCCESS,\n  payload: {\n    userId\n  }\n})\n\nexport const loginError = error => ({\n  type: LOGIN_ERROR,\n  payload: {\n    error\n  }\n})\n\nexport const loginOff = () => ({\n  type: LOGIN_OFF,\n})\n\nexport const addUserRequest = () => ({\n  type: ADD_USER_REQUEST\n})\n\nexport const addUserSuccess = ({name, password, email, id}) => ({\n  type: ADD_USER_SUCCESS,\n  payload: {\n    name,\n    password,\n    email,\n    id\n  }\n})\n\nexport const addUserError = error => ({\n  type: ADD_USER_ERROR,\n  payload: {\n    error\n  }\n})\n\nexport const addFavoriteEpisode = idEpisode => ({\n  type: ADD_FAVORITE_EPISODE,\n  payload: {\n    idEpisode\n  }\n})\n\nexport const addFavoriteCharacter = idCharacter => ({\n  type: ADD_FAVORITE_CHARACTER,\n  payload: {\n    idCharacter\n  }\n})\n\nconst initialState = {\n  users: {\n    '1': {\n      name: 'Manolo',\n      password: 'manolo123',\n      email: 'manolito@gmail.com',\n      favoriteCharacters: [1, 2, 3],\n      favoriteEpisodes: [2, 3, 4, 5, 6]\n    },\n    '2': {\n      name: 'Ana',\n      password: '123',\n      email: 'anita@gmail.com',\n      favoriteCharacters: [11, 12, 23],\n      favoriteEpisodes: [5, 6, 3]\n    },\n    '3': {\n      name: 'Federico',\n      password: '123',\n      email: 'federiquito@gmail.com',\n      favoriteCharacters: [1, 12, 22],\n      favoriteEpisodes: [9, 6 , 3 , 1]\n    }\n  },\n  userList: ['1', '2'],\n  loggedIn: localStorage.getItem('userId'),\n  loading: false\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_REQUEST: {\n      return {\n        ...state,\n        loading: true\n      }\n    }\n    case LOGIN_SUCCESS: {\n      return {\n        ...state,\n        loggedIn: action.payload.userId,\n        loading: false,\n        error: null\n      }\n    }\n    case LOGIN_ERROR: {\n      return {\n        ...state,\n        error: action.payload.error,\n        loading: false\n      }\n    }\n    case ADD_USER_REQUEST: {\n      return {\n        ...state,\n        loading: true\n      }\n    }\n    case ADD_USER_SUCCESS: {\n      const {\n        id,\n        name,\n        email,\n        password\n      } = action.payload\n\n      return {\n        ...state,\n        users: {\n          ...state.users,\n          [id]: {\n            name,\n            email,\n            password,\n            favoriteCharacters: [],\n            favoriteEpisodes: []\n          }\n        },\n        userList: [...state.userList, id],\n        loggedIn: id,\n        loading: false,\n        error: null\n      }\n    }\n    case ADD_USER_ERROR: {\n      return {\n        ...state,\n        error: action.payload.error,\n        loading: false\n      }\n    }\n    case ADD_FAVORITE_EPISODE: {\n      const newFavorite = [ action.payload.idEpisode ]\n\n      return {\n        ...state,\n        users: {\n          ...state.users,\n          [state.loggedIn]: {\n            ...state.users[state.loggedIn],\n            favoriteEpisodes: [\n              ...state.users[state.loggedIn].favoriteEpisodes,\n              ...newFavorite\n            ]\n          }\n        }\n      }\n    }\n    case ADD_FAVORITE_CHARACTER: {\n      const newFavorite = [ action.payload.idCharacter ]\n\n      return {\n        ...state,\n        users: {\n          ...state.users,\n          [state.loggedIn]: {\n            ...state.users[state.loggedIn],\n            favoriteCharacters: [\n              ...state.users[state.loggedIn].favoriteCharacters,\n              ...newFavorite\n            ]\n          }\n        }\n      }\n    }\n    case LOGIN_OFF: {\n      return {\n        ...state,\n        loggedIn: null\n      }\n    }\n    default: return state\n  }\n}\n","const GET_EPISODES_REQUEST = 'GET_EPISODES_REQUEST'\r\nconst GET_EPISODES_SUCCESS = 'GET_EPISODES_SUCCESS'\r\nconst GET_EPISODES_FAIL = 'GET_EPISODES_FAIL'\r\n\r\nexport const getEpisodesRequest = () => ({\r\n  type: 'GET_EPISODES_REQUEST'\r\n})\r\n\r\nexport const getEpisodesSuccess = (episodes) => ({\r\n  type: 'GET_EPISODES_SUCCESS',\r\n  payload: {\r\n    episodes\r\n  }\r\n})\r\n\r\nexport const getEpisodesFail = (error) => ({\r\n  type: 'GET_EPISODES_FAIL',\r\n  payload: {\r\n    error\r\n  }\r\n});\r\n\r\n\r\nconst initialState = {\r\n  entities: [],\r\n  loading: false\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_EPISODES_REQUEST:\r\n      return {\r\n        ...state,\r\n        loanding: true\r\n      }\r\n    case GET_EPISODES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loanding: false,\r\n        entities: [\r\n          ...state.entities,\r\n          ...action.payload.episodes\r\n        ]\r\n      }\r\n    case GET_EPISODES_FAIL:\r\n      return {\r\n        ...state,\r\n        loanding: false,\r\n        error: action.payload.error\r\n      }\r\n    default: return state\r\n  }\r\n}","const GET_CHARACTERS_REQUEST = 'GET_CHARACTERS_REQUEST'\r\nconst GET_CHARACTERS_SUCCESS = 'GET_CHARACTERS_SUCCESS'\r\nconst GET_CHARACTERS_FAIL = 'GET_CHARACTERS_FAIL'\r\n\r\nexport const getCharactersRequest = () => ({\r\n  type: 'GET_CHARACTERS_REQUEST'\r\n})\r\n\r\nexport const getCharactersSuccess = (characters) => ({\r\n  type: 'GET_CHARACTERS_SUCCESS',\r\n  payload: {\r\n    characters\r\n  }\r\n})\r\n\r\nexport const getCharactersFail = (error) => ({\r\n  type: 'GET_CHARACTERS_FAIL',\r\n  payload: {\r\n    error\r\n  }\r\n});\r\n\r\n\r\nconst initialState = {\r\n  entities: [],\r\n  loading: false\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_CHARACTERS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loanding: true\r\n      }\r\n    case GET_CHARACTERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loanding: false,\r\n        entities: [\r\n          ...state.entities,\r\n          ...action.payload.characters\r\n        ]\r\n      }\r\n    case GET_CHARACTERS_FAIL:\r\n      return {\r\n        ...state,\r\n        loanding: false,\r\n        error: action.payload.error\r\n      }\r\n    default: return state\r\n  }\r\n}","import React, { useEffect } from 'react'\r\nimport { connect as conecta } from 'react-redux'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport { loginSuccess as loginSuccessCreator } from '../../redux/users/'\r\n\r\nconst PrivateRoute = props => {\r\n  const {\r\n    loggedIn,\r\n    component: Component,\r\n    setUserId,\r\n    ...rest\r\n  } = props\r\n\r\n\r\n  const userId = localStorage.getItem('userId')\r\n\r\n  useEffect(() => {\r\n    if (userId) {\r\n      setUserId(userId)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (loggedIn || userId) {\r\n          return <Component {...props} />\r\n        } else {\r\n          return <Redirect to='/project-react/login' />\r\n        }\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nconst msp = state => {\r\n  const {\r\n    loggedIn\r\n  } = state.users\r\n\r\n  return {\r\n    loggedIn\r\n  }\r\n}\r\n\r\nconst mdp = {\r\n  setUserId: loginSuccessCreator\r\n}\r\n\r\nexport default conecta(msp, mdp)(PrivateRoute)\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport { loginSuccess as loginSuccessCreator } from '../../redux/users/'\r\n\r\nconst NotLoggedInRoute = props => {\r\n  const {\r\n    loggedIn,\r\n    component: Component,\r\n    setUserId,\r\n    ...rest\r\n  } = props\r\n\r\n  const userId = localStorage.getItem('userId')\r\n\r\n  useEffect(() => {\r\n    if (userId && !loggedIn) {\r\n      setUserId(userId)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (loggedIn || userId) {\r\n          return <Redirect to='/project-react' />\r\n        } else {\r\n          return <Component {...props} />\r\n        }\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nconst msp = state => {\r\n  const {\r\n    loggedIn\r\n  } = state.users\r\n\r\n  return {\r\n    loggedIn\r\n  }\r\n}\r\n\r\nconst mdp = {\r\n  setUserId: loginSuccessCreator\r\n}\r\n\r\nexport default connect(msp, mdp)(NotLoggedInRoute)\r\n","import {\n  loginError,\n  loginSuccess,\n  loginRequest,\n  addUserError,\n  addUserRequest,\n  addUserSuccess,\n  loginOff\n} from './index'\n\nconst uuidv1 = require('uuid/v1');\n\nconst fakeLogin = (email, password, state) => {\n  const { users, userList } = state.users\n  \n  return userList.find(userId => {\n    return (\n      users[userId].email === email &&\n      users[userId].password === password\n    )\n  })\n}\n\nconst fakeAddUser = ({email, password, name, state}) => {\n  const {\n    users,\n    userList\n  } = state.users\n\n  const emailExists = userList.some(uid => users[uid].email === email)\n\n  const toReturn = {}\n\n  if (!emailExists) {\n    toReturn.newId = uuidv1()\n  } else {\n    toReturn.error = 'Ya existe este usuario.'\n  }\n\n  return toReturn\n}\n\nexport const login = (email, password) => (dispatch, getState) => {\n  dispatch(loginRequest())\n\n  const userId = fakeLogin(email, password, getState())\n\n  if (userId) {\n    localStorage.setItem('userId', userId)\n    dispatch(loginSuccess(userId))\n  } else {\n    dispatch(loginError('Password o email incorrecto'))\n  }\n}\n\nexport const addUser = ({email, password, name}) => (dispatch, getState) => {\n  dispatch(addUserRequest())\n\n  const response = fakeAddUser({\n    email,\n    password,\n    name,\n    state: getState()\n  })\n\n  const {\n    error,\n    newId\n  } = response\n\n  if (!error) {\n    //localStorage.setItem('userId', newId)\n    dispatch(addUserSuccess({\n      id: newId,\n      email,\n      name,\n      password\n    }))\n  } else {\n    dispatch(addUserError(error))\n  }\n}\nexport const closeSesion = () => (dispatch, getState) => {\n  localStorage.clear();\n  dispatch(loginOff())\n}\n","import React from 'react'\r\nimport { BrowserRouter as Router, NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { closeSesion } from '../../redux/users/thunks'\r\n\r\n\r\nconst Navbar = ({name, closeSesion}) => {\r\n  console.log(name)\r\n  return(\r\n  <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n    <div className=\"container\">\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n        <div className=\"navbar-nav\">\r\n          <NavLink exact to=\"/project-react/\" className='nav-item nav-link'>Episodios</NavLink>\r\n          <NavLink exact to=\"/project-react/characters/\" className=\"nav-item nav-link\">Personajes</NavLink>\r\n          <NavLink exact to=\"/project-react/episodecommon/\" className=\"nav-item nav-link\">Episodios en comun</NavLink>\r\n        </div>\r\n      </div>\r\n\r\n        <span className=\"navbar-text\">\r\n          {name}\r\n        </span>\r\n        <button onClick={closeSesion} className=\"btn btn-primary btn-sm\">Cerrar Sesion</button>\r\n    </div>\r\n  </nav>\r\n)}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n  const {\r\n    loggedIn,\r\n    users\r\n  } = state.users\r\n  \r\n  return {\r\n    name: users[loggedIn].name\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  closeSesion\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);","import React, { lazy, Suspense } from 'react'\r\nimport Navbar from '../../components/Navbar'\r\nimport Container from 'react-bootstrap/Container'  \r\nconst EpisodeContainer = lazy (() => import('../../containers/EpisodeContainer'))\r\n\r\n\r\nconst HomePage = () => (\r\n  <>\r\n    <Navbar />\r\n    <Suspense fallback={<Container><h1>Loading…</h1></Container>}>\r\n      <EpisodeContainer />\r\n    </Suspense>\r\n  </>\r\n)\r\n\r\nexport default HomePage","import React, { lazy, Suspense } from 'react'\r\nimport Navbar from '../../components/Navbar'\r\nimport Container from 'react-bootstrap/Container'\r\nconst CharacterContainer = lazy (() => import('../../containers/CharacterContainer'))\r\n\r\nconst CharacterPage = () => (\r\n  <>\r\n    <Navbar />\r\n    <Suspense fallback={<Container><h1>Loading…</h1></Container>}>\r\n      <CharacterContainer />\r\n    </Suspense>\r\n  </>\r\n)\r\n\r\nexport default CharacterPage","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { login as loginCreator } from '../../redux/users/thunks'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nconst LoginContainer = (props) => {\r\n\r\n  const {\r\n    login,\r\n    error,\r\n    loading\r\n  } = props\r\n\r\n  const [values, setValues] = useState({\r\n    email: '',\r\n    password: '',\r\n    show: true\r\n  })\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      name,\r\n      value\r\n    } = event.target\r\n\r\n    setValues({\r\n      ...values,\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    login(values.email, values.password)\r\n  }\r\n\r\n\r\n  return(\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <h2>Inicio de Sesion</h2>\r\n      </Row>\r\n        \r\n      {error && (\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md={4}>\r\n            <Alert variant=\"danger\">\r\n              {error}\r\n            </Alert>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col md={4}>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group>\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control \r\n                type=\"email\"\r\n                name='email'\r\n                value={values['']}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control \r\n                type=\"password\"\r\n                name='password'\r\n                value={values['']}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Link to='/project-react/register'>Registrarse</Link>\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">Iniciar Sesion</Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {\r\n    loading,\r\n    error\r\n  } = state.users\r\n\r\n  return {\r\n    loading,\r\n    error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  login: loginCreator\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer)","import React from 'react'\r\nimport LoginContainer from '../../containers/LoginContainer'\r\n\r\nconst LoginPage = () => (\r\n  <LoginContainer />\r\n)\r\n\r\nexport default LoginPage","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addUser as addUserCreator } from '../../redux/users/thunks'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst RegisterContainer = (props) => {\r\n  const {\r\n    loading,\r\n    addUser,\r\n    error\r\n  } = props\r\n\r\n  const [values, setValues] = useState({\r\n    name: '',\r\n    password: '',\r\n    email: '',\r\n  })\r\n\r\n  const handleChange = (e) => {\r\n    const {\r\n      name,\r\n      value\r\n    } = e.target\r\n\r\n    setValues({\r\n      ...values,\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    addUser(values)\r\n  }\r\n\r\n  return(\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <h2>Registro de Usuario</h2>\r\n      </Row>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col md={6}>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group as={Row}>\r\n              <Form.Label column sm=\"2\">Usuario</Form.Label>\r\n              <Col sm=\"10\">\r\n                <Form.Control \r\n                  type=\"text\"\r\n                  name='name'\r\n                  value={values['name']}\r\n                  onChange={handleChange}\r\n                 />\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n              <Form.Label column sm=\"2\">Email</Form.Label>\r\n              <Col sm=\"10\">\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  name='email'\r\n                  value={values['email']}\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n              <Form.Label column sm=\"2\">Password</Form.Label>\r\n              <Col sm=\"10\">\r\n                <Form.Control \r\n                  type='password'\r\n                  name='password'\r\n                  value={values['password']}\r\n                  onChange={handleChange}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group className=\"justify-content-md-center\">\r\n              <Button className=\"mx-auto d-block\" variant=\"primary\" type=\"submit\">Registrarse</Button>\r\n            </Form.Group>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst msp = state => {\r\n  const {\r\n    loading,\r\n    error\r\n  } = state.users\r\n\r\n  return {\r\n    loading,\r\n    error\r\n  }\r\n}\r\n\r\nconst mdp = {\r\n  addUser: addUserCreator\r\n}\r\n\r\nexport default connect(msp, mdp)(RegisterContainer)","import React from 'react'\r\nimport RegisterContainer from '../../containers/RegisterContainer'\r\n\r\nconst RegisterPage = () => (\r\n  <RegisterContainer />\r\n)\r\nexport default RegisterPage","import React, { lazy, Suspense } from 'react'\r\nimport Navbar from '../../components/Navbar'\r\nimport Container from 'react-bootstrap/Container'  \r\nconst EpisodeCommonContainer = lazy (() => import('../../containers/EpisodeCommonContainer'))\r\n\r\nconst EpisodeCommonPage = () => (\r\n  <>\r\n    <Navbar />\r\n    <Suspense fallback={<Container><h1>Loading…</h1></Container>}>\r\n      <EpisodeCommonContainer />\r\n    </Suspense>\r\n  </>\r\n)\r\n\r\nexport default EpisodeCommonPage","import React from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport PrivateRoute from './containers/PrivateRoute'\r\nimport NotLoggedInRoute from './containers/NotLoggedInRoute'\r\nimport HomePage from './pages/HomePage'\r\nimport CharacterPage from './pages/CharactersPage'\r\nimport LoginPage from './pages/LoginPage'\r\nimport RegisterPage from './pages/RegisterPage'\r\nimport EpisodeCommonPage from './pages/EpisodeCommonPage'\r\n\r\nconst Routes = () => (\r\n  <Router>\r\n    <NotLoggedInRoute exact path='/project-react/register' component={RegisterPage} />\r\n    <NotLoggedInRoute exact path='/project-react/login' component={LoginPage} />\r\n    <PrivateRoute exact path='/project-react/' component={HomePage} />\r\n    <PrivateRoute exact path='/project-react/characters/' component={CharacterPage} />\r\n    <PrivateRoute exact path='/project-react/episodecommon/' component={EpisodeCommonPage} />\r\n  </Router>\r\n)\r\nexport default Routes","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\r\nimport episodesReducer from './episodes'\r\nimport charactersReducer from './characters'\r\nimport userReducer from './users'\r\n\r\nexport default combineReducers({\r\n  episodes: episodesReducer,\r\n  characters: charactersReducer,\r\n  users: userReducer,\r\n})\r\n","const logger = store => next => action => {\r\n  console.group(action.type)\r\n  console.info('Se está ejecutando la acción: ', action)\r\n  console.log('El state viejo de la store: ', store.getState())\r\n  const result = next(action)\r\n  console.log('El nuevo state de la store: ', store.getState())\r\n  console.groupEnd()\r\n\r\n  return result\r\n}\r\n\r\nexport default logger\r\n  ","import { createStore, applyMiddleware } from 'redux'\r\nimport rootReducer from './reducers'\r\nimport logger from './middlewares/logger'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(\r\n    thunk,\r\n    logger\r\n  )\r\n)\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './routes';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\n\nconst ToRender = () => (\n  <Provider store={store}>\n    <Routes />\n  </Provider>\n)\n\nReactDOM.render(<ToRender />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}